{"version":3,"sources":["components/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","recovered","confirmed","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAoFeA,EAlFD,WAEZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAAY,uCAAG,8BAAAC,EAAA,+EAEEC,MAAM,0CAFR,cAEVC,EAFU,gBAGSA,EAAIC,OAHb,OAGVC,EAHU,OAIhBC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALb,kDAOfF,QAAQC,IAAR,MAPe,0DAAH,qDAkBnB,OALAE,qBAAU,WACRT,MAEC,IAGD,mCACA,oCACE,kDACA,qFAEA,+BACE,oBAAIU,UAAW,OAAf,SACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,cAA0B,qCAA1B,aACA,mBAAGA,UAAU,mBAAb,0BAIR,oBAAIA,UAAW,OAAf,SACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,cAA0B,yCAA1B,eACA,mBAAGA,UAAU,mBAAb,SAAiCZ,EAAKa,mBAI9C,oBAAID,UAAW,OAAf,SACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,cAA0B,yCAA1B,oBACA,mBAAGA,UAAU,mBAAb,SAAiCZ,EAAKc,mBAI9C,oBAAIF,UAAW,OAAf,SACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,cAA0B,yCAA1B,WACA,mBAAGA,UAAU,mBAAb,SAAiCZ,EAAKe,gBAI9C,oBAAIH,UAAW,OAAf,SACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,cAA0B,yCAA1B,gBACA,mBAAGA,UAAU,mBAAb,SAAiCZ,EAAKgB,gBAI9C,oBAAIJ,UAAW,OAAf,SACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,cAA0B,wCAA1B,aACA,mBAAGA,UAAU,mBAAb,SAAiCZ,EAAKiB,kCC9DvCC,G,MARH,WACV,OACE,mCACE,cAAC,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.029bcefb.chunk.js","sourcesContent":["import React, {useEffect,useState} from 'react'\r\n\r\nconst Covid = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n   const getCovidData = async() => {\r\n       try{\r\n        const res = await fetch('https://api.covid19india.org/data.json');\r\n        const actualData = await res.json();\r\n        console.log(actualData.statewise[0]);\r\n        setData(actualData.statewise[0]);\r\n       } catch(err){\r\n         console.log(err);\r\n       }\r\n        \r\n   }\r\n\r\n\r\n  useEffect(() => {\r\n    getCovidData();\r\n   \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <section>\r\n      <h1>Covid 19 Tracker</h1>\r\n      <h2>Fetching Data from ( https://api.covid19india.org )</h2>\r\n\r\n      <ul>\r\n        <li className =\"card\">\r\n            <div className=\"card_main\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\"> <span> </span>Country</p>\r\n                <p className=\"total_small_card\">India</p>\r\n              </div>\r\n            </div>\r\n        </li>\r\n        <li className =\"card\" >\r\n            <div className=\"card_main\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\"> <span>Total</span>Recovered</p>\r\n                <p className=\"total_small_card\">{data.recovered}</p>\r\n              </div>\r\n            </div>\r\n        </li>\r\n        <li className =\"card\">\r\n            <div className=\"card_main\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\"> <span>Total</span>ConfirmedCases</p>\r\n                <p className=\"total_small_card\">{data.confirmed}</p>\r\n              </div>\r\n            </div>\r\n        </li>\r\n        <li className =\"card\">\r\n            <div className=\"card_main\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\"> <span>Total</span>Death</p>\r\n                <p className=\"total_small_card\">{data.deaths}</p>\r\n              </div>\r\n            </div>\r\n        </li>\r\n        <li className =\"card\">\r\n            <div className=\"card_main\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\"> <span>Total</span>ActiveCase</p>\r\n                <p className=\"total_small_card\">{data.active}</p>\r\n              </div>\r\n            </div>\r\n        </li>\r\n        <li className =\"card\">\r\n            <div className=\"card_main\">\r\n              <div className=\"card_inner\">\r\n                <p className=\"card_name\"> <span>Last</span>Updated</p>\r\n                <p className=\"total_small_card\">{data.lastupdatedtime}</p>\r\n              </div>\r\n            </div>\r\n        </li>\r\n      </ul>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Covid\r\n","import React from 'react'\nimport Covid from \"./components/covid\";\nimport './components/covid.css';\n\nconst App = () => {\n  return (\n    <>\n      <Covid/>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}